name: Bankingapp

on:
  push:
    branches: [ "master" ]


jobs:
  git_leaks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Gitleaks Installation
      run: sudo apt install -y gitleaks

    - name: Gitleak Code Scan
      run: gitleaks detect source . -r gitleaks-report.json -f json
  compile:
    runs-on: ubuntu-latest
    needs: git_leaks
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Code Compile
      run: mvn compile

  unit_test:
    runs-on: ubuntu-latest
    needs: compile
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Unit Test Cases
      run: mvn test -DskipTests=true

  trivy_Scan:
    runs-on: ubuntu-latest
    needs: unit_test
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Trivy Installation
      run: | 
        sudo apt-get install -y wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update -y
        sudo apt-get install -y trivy

    - name: Trivy FS scan
      run: trivy fs --format table -o fs-report.json .

  sonarqube:
    runs-on: ubuntu-latest
    needs: trivy_Scan
    steps:
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5.1.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
        pollingTimeoutSec: 600
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }} 

  build_package:
    runs-on: ubuntu-latest
    needs: sonarqube
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build Package
      run: mvn package -DskipTests=true
    - name: List target directory
      run: ls -la target  # This will help you verify if the JAR file is created

    - name: Nexus Repo Publish
      uses: sonatype-nexus-community/nexus-repo-github-action@master
      with:
        serverUrl: ${{ vars.NEXUS_URL }}
        username: admin
        password: ${{ secrets.NEXUS_PASSWORD }}
        format: maven2
        repository: maven-snapshots
        coordinates: groupId=com.example artifactId=bankapp version=0.0.1-SNAPSHOT
        assets: extension=jar
        filename: ./target/bankapp-0.0.1-SNAPSHOT.jar  